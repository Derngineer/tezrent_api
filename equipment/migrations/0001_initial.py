# Generated by Django 5.2.7 on 2025-10-21 04:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('icon', models.ImageField(blank=True, help_text='Small icon for category (64x64px recommended) - used in navigation, category cards', null=True, upload_to='category_icons/')),
                ('promotional_image', models.ImageField(blank=True, help_text='Larger promotional image (400x200px recommended) - used in featured sections, banners', null=True, upload_to='category_promotions/')),
                ('is_featured', models.BooleanField(default=False, help_text='Show in featured categories section')),
                ('display_order', models.PositiveIntegerField(default=1, help_text='Order for displaying categories')),
                ('color_code', models.CharField(blank=True, help_text='Hex color code for category theme (e.g., #FF6B35)', max_length=7)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('manufacturer', models.CharField(max_length=100)),
                ('model_number', models.CharField(max_length=100)),
                ('year', models.PositiveIntegerField()),
                ('weight', models.DecimalField(decimal_places=2, help_text='Weight in kg', max_digits=10)),
                ('dimensions', models.CharField(help_text='LxWxH in cm', max_length=100)),
                ('fuel_type', models.CharField(blank=True, max_length=50)),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('weekly_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('monthly_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('country', models.CharField(choices=[('UAE', 'United Arab Emirates'), ('UZB', 'Uzbekistan')], max_length=3)),
                ('city', models.CharField(max_length=3)),
                ('status', models.CharField(choices=[('available', 'Available'), ('maintenance', 'Under Maintenance'), ('rented', 'Currently Rented'), ('reserved', 'Reserved'), ('inactive', 'Inactive')], default='available', max_length=20)),
                ('total_units', models.PositiveIntegerField(default=1)),
                ('available_units', models.PositiveIntegerField(default=1)),
                ('featured', models.BooleanField(default=False, help_text='Show in featured brands section')),
                ('is_new_listing', models.BooleanField(default=True, help_text='Mark as new listing (auto-expires after 30 days)')),
                ('is_todays_deal', models.BooleanField(default=False, help_text="Show in today's deals section")),
                ('original_daily_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Original price before discount', max_digits=10, null=True)),
                ('deal_discount_percentage', models.PositiveIntegerField(default=0, help_text='Discount percentage (0-100)')),
                ('deal_expires_at', models.DateTimeField(blank=True, help_text='When the deal expires', null=True)),
                ('promotion_badge', models.CharField(blank=True, help_text="Badge text like 'HOT DEAL', 'LIMITED TIME'", max_length=50)),
                ('promotion_description', models.TextField(blank=True, help_text='Special promotion description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='equipment.category')),
                ('seller_company', models.ForeignKey(help_text='The company that listed this equipment', on_delete=django.db.models.deletion.CASCADE, related_name='listed_equipment', to='accounts.companyprofile')),
                ('tags', models.ManyToManyField(blank=True, related_name='equipment', to='equipment.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(blank=True, max_length=300)),
                ('description', models.TextField(blank=True)),
                ('banner_type', models.CharField(choices=[('hero', 'Hero Banner'), ('featured_deals', 'Featured Deals Banner'), ('category_highlight', 'Category Highlight Banner'), ('brand_spotlight', 'Brand Spotlight Banner'), ('seasonal_promo', 'Seasonal Promotion Banner')], max_length=20)),
                ('position', models.CharField(choices=[('top', 'Top of Homepage'), ('middle', 'Middle Section'), ('bottom', 'Bottom Section'), ('sidebar', 'Sidebar')], default='top', max_length=10)),
                ('desktop_image', models.ImageField(help_text='Desktop banner image (1920x400px recommended)', upload_to='banners/desktop/')),
                ('mobile_image', models.ImageField(blank=True, help_text='Mobile banner image (768x300px recommended)', null=True, upload_to='banners/mobile/')),
                ('cta_text', models.CharField(default='Shop Now', max_length=50)),
                ('cta_link', models.CharField(blank=True, help_text='Link to category, deals page, or external URL', max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('display_order', models.PositiveIntegerField(default=1, help_text='Order for displaying multiple banners')),
                ('click_count', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target_category', models.ForeignKey(blank=True, help_text='Show banner for specific category', null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.category')),
                ('target_equipment', models.ForeignKey(blank=True, help_text='Feature specific equipment', null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.equipment')),
            ],
            options={
                'ordering': ['position', 'display_order'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=255)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specifications', to='equipment.equipment')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='equipment_images/')),
                ('is_primary', models.BooleanField(default=False)),
                ('display_order', models.PositiveIntegerField(default=1, help_text='Order for displaying in product card (1-7)')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='equipment.equipment')),
            ],
            options={
                'ordering': ['display_order', 'id'],
                'unique_together': {('equipment', 'display_order')},
            },
        ),
    ]
