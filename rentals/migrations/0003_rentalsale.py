# Generated by Django 5.2.7 on 2025-10-31 05:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
        ('equipment', '0002_equipment_manual_description_and_more'),
        ('rentals', '0002_alter_rentaldocument_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='RentalSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_revenue', models.DecimalField(decimal_places=2, help_text='Total amount paid by customer', max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('insurance_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('late_fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('damage_fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('platform_commission_percentage', models.DecimalField(decimal_places=2, default=10.0, help_text='Platform commission percentage at time of sale', max_digits=5)),
                ('platform_commission_amount', models.DecimalField(decimal_places=2, help_text='Calculated commission amount', max_digits=10)),
                ('seller_payout', models.DecimalField(decimal_places=2, help_text='Amount to be paid to seller after commission', max_digits=10)),
                ('rental_days', models.PositiveIntegerField()),
                ('rental_start_date', models.DateField()),
                ('rental_end_date', models.DateField()),
                ('equipment_quantity', models.PositiveIntegerField(default=1)),
                ('payout_status', models.CharField(choices=[('pending', 'Pending Payout'), ('processing', 'Processing'), ('completed', 'Paid Out'), ('failed', 'Failed'), ('on_hold', 'On Hold')], default='pending', max_length=20)),
                ('payout_date', models.DateTimeField(blank=True, null=True)),
                ('payout_reference', models.CharField(blank=True, max_length=100)),
                ('payout_notes', models.TextField(blank=True)),
                ('sale_date', models.DateTimeField(auto_now_add=True, help_text='When rental was completed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='accounts.customerprofile')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='equipment.equipment')),
                ('rental', models.OneToOneField(help_text='The rental that generated this sale', on_delete=django.db.models.deletion.CASCADE, related_name='sale', to='rentals.rental')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='accounts.companyprofile')),
            ],
            options={
                'ordering': ['-sale_date'],
                'indexes': [models.Index(fields=['seller', '-sale_date'], name='rentals_ren_seller__01fd12_idx'), models.Index(fields=['customer', '-sale_date'], name='rentals_ren_custome_4b6c99_idx'), models.Index(fields=['payout_status'], name='rentals_ren_payout__57f56b_idx')],
            },
        ),
    ]
