# Generated by Django 5.2.7 on 2025-10-21 04:07

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('equipment', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('actual_start_date', models.DateTimeField(blank=True, null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_days', models.PositiveIntegerField()),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('insurance_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('security_deposit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('late_fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('damage_fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('payment_pending', 'Payment Pending'), ('confirmed', 'Confirmed'), ('preparing', 'Preparing Equipment'), ('ready_for_pickup', 'Ready for Pickup'), ('out_for_delivery', 'Out for Delivery'), ('delivered', 'Equipment Delivered'), ('in_progress', 'Rental in Progress'), ('return_requested', 'Return Requested'), ('returning', 'Equipment Returning'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('overdue', 'Overdue'), ('dispute', 'Under Dispute')], default='pending', max_length=20)),
                ('rental_reference', models.CharField(blank=True, max_length=20, unique=True)),
                ('delivery_address', models.TextField(blank=True)),
                ('delivery_city', models.CharField(blank=True, max_length=3)),
                ('delivery_country', models.CharField(blank=True, max_length=3)),
                ('delivery_instructions', models.TextField(blank=True)),
                ('pickup_required', models.BooleanField(default=True)),
                ('customer_phone', models.CharField(max_length=20)),
                ('customer_email', models.EmailField(max_length=254)),
                ('customer_notes', models.TextField(blank=True, help_text="Customer's special requests or notes")),
                ('seller_notes', models.TextField(blank=True, help_text="Seller's internal notes")),
                ('cancellation_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rentals', to='accounts.customerprofile')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rentals', to='equipment.equipment')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rental_orders', to='accounts.companyprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RentalDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('rental_agreement', 'Rental Agreement'), ('insurance_document', 'Insurance Document'), ('delivery_receipt', 'Delivery Receipt'), ('return_receipt', 'Return Receipt'), ('damage_report', 'Damage Report'), ('invoice', 'Invoice'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='rental_documents/')),
                ('is_signed', models.BooleanField(default=False)),
                ('signed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rental', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='rentals.rental')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RentalImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='rental_images/')),
                ('image_type', models.CharField(choices=[('delivery_confirmation', 'Delivery Confirmation'), ('equipment_condition_before', 'Equipment Condition Before'), ('equipment_condition_after', 'Equipment Condition After'), ('damage_report', 'Damage Report'), ('pickup_confirmation', 'Pickup Confirmation'), ('other', 'Other')], max_length=30)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rental', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='rentals.rental')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RentalPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('rental_fee', 'Rental Fee'), ('security_deposit', 'Security Deposit'), ('delivery_fee', 'Delivery Fee'), ('late_fee', 'Late Fee'), ('damage_fee', 'Damage Fee'), ('insurance_fee', 'Insurance Fee')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('card', 'Credit/Debit Card'), ('bank_transfer', 'Bank Transfer'), ('mobile_money', 'Mobile Money'), ('cash', 'Cash'), ('other', 'Other')], max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('gateway_reference', models.CharField(blank=True, max_length=100)),
                ('gateway_response', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('rental', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='rentals.rental')),
            ],
        ),
        migrations.CreateModel(
            name='RentalReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_rating', models.PositiveIntegerField(help_text='Rating for equipment condition (1-5 stars)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('service_rating', models.PositiveIntegerField(help_text='Rating for seller service (1-5 stars)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('delivery_rating', models.PositiveIntegerField(help_text='Rating for delivery/pickup service (1-5 stars)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('overall_rating', models.DecimalField(decimal_places=2, editable=False, max_digits=3)),
                ('review_text', models.TextField(blank=True)),
                ('would_recommend', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customerprofile')),
                ('rental', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='rentals.rental')),
            ],
        ),
        migrations.CreateModel(
            name='RentalStatusUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(blank=True, max_length=20)),
                ('new_status', models.CharField(max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('is_visible_to_customer', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rental', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_updates', to='rentals.rental')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
